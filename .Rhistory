plot(pollution$latitude, ppm, col=pollution$region)
abline(h=12, lwd=2,lty=2)
par(mfrow = c(1,
| 2), mar = c(5, 4, 2, 1))
par(mfrow = c(1,2), mar = c(5,4,2,1))
west <- subset(pollution, region == "west")
ploT(west$latitude, west$pm25, main="West")
plot(west$latitude, west$pm25, main="West")
plot(east$latitude, east$pm25, main="East")
?Devices
with(faithful, plot(eruption, waiting))
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, "geyserplot.png")
dev.copy(png, file = "geyserplot.png")
dev.off()
cars
head(cars)
with(cars, plot(speed, dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data = mpg)
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
boxplot(airquality$Month)
head(airquality)
table(airquality$Month)
boxplot(Ozone~Month, data = airquality)
library(swirl)
swirl()
boxplot(Ozone~Month, data = airquality)
boxplot(Ozone~Month, data = airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis="blue", col.lab="red")
boxplot(Ozone~Month, data = airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis="blue", col.lab="red", main="Ozone and Wind in New York City")
title(main = "Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main="Ozone and Wind in New York City")
par("length")
length(par())
names(par())
par()$pin
par()$fg
?pch
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type="n")
title(main="Wind and Ozone in NYC")
may <- subset(airquality, month == 5)
head(airquality)
may <- subset(airquality, Month == 5)
points(may$Wind, may$Ozone, type="1")
points(may$Wind, may$Ozone, type="m")
points(may$Wind, may$Ozone, type="x")
points(may$Wind, may$Ozone, color = "blue", type="x")
points(may$Wind, may$Ozone, col = "blue", type="x")
points(may$Wind, may$Ozone, col = "blue", type="n")
points(may$Wind, may$Ozone, col = "blue", type="17")
points(may$Wind, may$Ozone, col = "blue", type=17)
points(may$Wind, may$Ozone, col = "blue", type="17")
points(may$Wind, may$Ozone, col = "blue", pch="17")
points(may$Wind, may$Ozone, col="blue", pch=17)
notmay <- subset(airquality, Month != 5)
points(notmay$Wind, notmay$Ozone, col="red", pch=10)
points(notmay$Wind, notmay$Ozone, col="red", pch=8)
legend("topright", pch=c(17,8), col=c("blue", "red"), legend=c("May", "Other Months"))
abline(v=12, lty=2, lwd=2)
abline(v=median(airquality$Wind), lty=2, lwd=2)
par(mfrow = c(1,2))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main="Ozone and Solar Radiation")
par(mfrow=c(1,3), oma= c(0,0,2,0))
par(mfrow=c(1,3), mar = c(4,4,2,1), oma=c(0,0,2,0) )
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, title="Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Solar Temperature")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
head(airquality)
range(airquality$Ozone)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab = "Month", ylab="Ozone (ppb)", col.axis="blue", col.lab="red")
main
title(main = "Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
length(par() )
names(par())
par($pin)
par()$pin
par("fg")
?pch
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type="n")
title(main = "Wind and Ozone in NYC")
may <- subset(airquality, Month == 5)
points(may$Wind, may$Ozone, pch=17)
points(may$Wind, may$Ozone, col="blue", pch=17)
notmay <- subset(airquality, Month != 5)
points(notmay$Wind, notmay$Ozone, col="red", pch=18)
points(notmay$Wind, notmay$Ozone, col="red", pch=8)
legend("topright", pch = c(17, 8), col = c("blue", "red"), legend = c("May", " Other Month"))
legend("topright", pch = c(17, 8), col = c("blue", "red"), legend = c("May", " Other Months"))
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other
| Months"))
legend("topright",pch = c(17,8), col = c("blue","red"), legend = c("May","Other
| Months"))
legend("topright",pch = c(17,8), col = c("blue","red"), legend = c("May","Other Months"))
abline(v=median(airquality$Wind, lty = 2, twd=2))
abline(v=median(airquality$Wind), lty=2, lwd=2)
par(mfrow = c(1,2))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
# set working directory
setwd("~/Documents/PROGRAMMING/Coursera/DS/assignments/EDA/week1")
# file name
file <- "household_power_consumption.txt"
# read data
data <- read.table(file, header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
# filter data for '1/2/2007' and '2/2/2007'
data <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
# create a datetime column
data$dateTime <- strptime(paste(data$Date, data$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
# modify data format of selective folders
data$globalActivePower <- as.numeric(data$Global_active_power)
data$globalReactivePower <- as.numeric(data$Global_reactive_power)
data$subMetering1 <- as.numeric(data$Sub_metering_1)
data$subMetering2 <- as.numeric(data$Sub_metering_2)
data$subMetering3 <- as.numeric(data$Sub_metering_3)
# Plot 1 - Frequency histogram of global active power consumption
png("plot1x.png", width=480, height=480)
hist(data$globalActivePower,
col="red",
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)",
ylab = "Frequency")
dev.off()
# set working directory
setwd("~/Documents/PROGRAMMING/Coursera/DS/assignments/EDA/week1")
# file name
file <- "household_power_consumption.txt"
# read data
data <- read.table(file, header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
# filter data for '1/2/2007' and '2/2/2007'
data <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
# create a datetime column
data$dateTime <- strptime(paste(data$Date, data$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
# modify data format of selective folders
data$globalActivePower <- as.numeric(data$Global_active_power)
data$globalReactivePower <- as.numeric(data$Global_reactive_power)
data$subMetering1 <- as.numeric(data$Sub_metering_1)
data$subMetering2 <- as.numeric(data$Sub_metering_2)
data$subMetering3 <- as.numeric(data$Sub_metering_3)
# Plot 1 - Frequency histogram of global active power consumption
png("plot1x.png", width=480, height=480)
hist(data$globalActivePower,
col="red",
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)",
ylab = "Frequency")
dev.off()
# set working directory
setwd("~/Documents/PROGRAMMING/Coursera/DS/assignments/EDA/week1")
# file name
file <- "household_power_consumption.txt"
# read data
data <- read.table(file, header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
# filter data for '1/2/2007' and '2/2/2007'
data <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
# create a datetime column
data$dateTime <- strptime(paste(data$Date, data$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
# modify data format of selective folders
data$globalActivePower <- as.numeric(data$Global_active_power)
data$globalReactivePower <- as.numeric(data$Global_reactive_power)
data$subMetering1 <- as.numeric(data$Sub_metering_1)
data$subMetering2 <- as.numeric(data$Sub_metering_2)
data$subMetering3 <- as.numeric(data$Sub_metering_3)
# set working directory
setwd("~/Documents/PROGRAMMING/Coursera/DS/assignments/EDA/week1")
# file name
file <- "household_power_consumption.txt"
# read data
data <- read.table(file, header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
# filter data for '1/2/2007' and '2/2/2007'
data <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
# create a datetime column
data$dateTime <- strptime(paste(data$Date, data$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
# modify data format of selective folders
data$globalActivePower <- as.numeric(data$Global_active_power)
data$globalReactivePower <- as.numeric(data$Global_reactive_power)
data$subMetering1 <- as.numeric(data$Sub_metering_1)
data$subMetering2 <- as.numeric(data$Sub_metering_2)
data$subMetering3 <- as.numeric(data$Sub_metering_3)
knitr::opts_chunk$set(echo = TRUE)
library(kernlab)
data(spam)
head(spam[,1:5])
library(kernlab)
dim(spam)
set.seed(3435)
trainIndictator <- rbinom(4601,1,0.5)
trainData <- spam[trainIndictator == 1,]
testData <- spam[trainIndictator == 0,]
dim(trainData)
names(trainData)
head(trainData[,1:5])
table(trainSpam$type)
knitr::opts_chunk$set(echo = TRUE)
library(kernlab)
dim(spam)
set.seed(3435)
trainIndictator <- rbinom(4601,1,0.5)
trainSpam <- spam[trainIndictator == 1,]
testSpam <- spam[trainIndictator == 0,]
names(trainSpam)
head(trainSpam[,1:5])
table(trainSpam$type)
model <- glm(type ~ ., data = trainSpam, family="binomial")
model <- glm(type ~ ., data = trainSpam, family="binomial")
summary(model)
model <- glm(type ~ ., data = trainSpam, family="binomial")
prediction <- predict(model, testSpam)
head(prediction)
knitr::opts_chunk$set(echo = TRUE)
library(kernlab)
dim(spam)
set.seed(3435)
trainIndictator <- rbinom(4601,1,0.5)
trainSpam <- spam[trainIndictator == 1,]
testSpam <- spam[trainIndictator == 0,]
names(trainSpam)
head(trainSpam[,1:5])
table(trainSpam$type)
model <- glm(type ~ ., data = trainSpam, family="binomial")
prediction <- predict(model, testSpam)
head(prediction)
head(trainSpam$type)
predictSpam <- rep('nonspam', dim(testSpam)[1])
predictSpam[prediction > 0.5] = 'spam'
table(predictSpam, testSpam$type)
table(predictSpam, testSpam$type)
# error rate
(124+63)/(1344+124+63+783)
library(kernlab)
knitr::opts_chunk$set(echo = TRUE)
library(kernlab)
knitr::opts_chunk$set(echo = TRUE)
set.seed(3435)
trainIndictator <- rbinom(4601,1,0.5)
trainSpam <- spam[trainIndictator == 1,]
testSpam <- spam[trainIndictator == 0,]
library(kernlab)
knitr::opts_chunk$set(echo = TRUE)
dim(spam)
library(kernlab)
knitr::opts_chunk$set(echo = TRUE)
data(spam)
library(kernlab)
knitr::opts_chunk$set(echo = TRUE)
data(spam)
dim(spam)
library(kernlab)
knitr::opts_chunk$set(echo = TRUE)
data(spam)
dim(spam)
library(kernlab)
knitr::opts_chunk$set(echo = TRUE)
library(kernlab)
knitr::opts_chunk$set(echo = TRUE)
data(spam)
dim(spam)
set.seed(3435)
trainIndictator <- rbinom(4601,1,0.5)
trainSpam <- spam[trainIndictator == 1,]
testSpam <- spam[trainIndictator == 0,]
names(trainSpam)
head(trainSpam[,1:5])
table(trainSpam$type)
model <- glm(type ~ ., data = trainSpam, family="binomial")
prediction <- predict(model, testSpam)
head(prediction)
predictSpam <- rep('nonspam', dim(testSpam)[1])
predictSpam[prediction > 0.5] = 'spam'
table(predictSpam, testSpam$type)
# error rate
(124+63)/(1344+124+63+783)
library(kernlab)
knitr::opts_chunk$set(echo = TRUE)
data(spam)
dim(spam)
set.seed(3435)
trainIndictator <- rbinom(4601,1,0.5)
trainSpam <- spam[trainIndictator == 1,]
testSpam <- spam[trainIndictator == 0,]
names(trainSpam)
head(trainSpam[,1:5])
table(trainSpam$type)
model <- glm(type ~ ., data = trainSpam, family="binomial")
prediction <- predict(model, testSpam)
head(prediction)
predictSpam <- rep('nonspam', dim(testSpam)[1])
predictSpam[prediction > 0.5] = 'spam'
table(predictSpam, testSpam$type)
# error rate
(124+63)/(1344+124+63+783)
getwd()
getwd()
list.files()
data <- read.csv("activity.csv")
head(data)
data <- read.csv("activity.csv")
str(data)
data <- read.csv("activity.csv")
str(data)
data <- read.csv("activity.csv")
head(data, n = 20)
data <- read.csv("activity.csv")
str(data)
data <- read.csv("activity.csv")
data$date <- strptime(data$date, format = "%Y-%m-%d")
str(data)
head(data)
str(data)
library(dplyr)
data %>% group_by(date) %>% sum(totalSteps = sum(steps, na.rm=TRUE))
str*data
str(data)
data <- read.csv("activity.csv")
getwd()
data <- read.csv("activity.csv")
getwd()
data$date <- strptime(data$date, format = "%Y-%m-%d")
str(data)
setwd("Documents/PROGRAMMING/Coursera/DS/assignments/RepData_PeerAssessment1")
getwd()
list.files()
data <- read.csv("activity.csv")
str(data)
library(lubridate)
data$date <- ymd(data$date)
str(data)
data <- read.csv("activity.csv")
data$date <- as.Date(data$date)
str(data)
data %>% group_by(date) %>% mutate(total=sum(steps)) %>% head()
data %>% group_by(date) %>% summarize(total=sum(steps))
data %>% group_by(date) %>% summarize(total=sum(steps)) %>% head()
data %>% group_by(date) %>% summarize(total=sum(steps)) %>% mutate(x = mean(total))
data %>% group_by(date) %>% summarize(total=sum(steps)) %>% mean(total, na.rm = TRUE)
data %>% group_by(date) %>% summarize(total=sum(steps)) %>% summarize(average = mean(total, na.rm = TRUE))
data <- read.csv("activity.csv")
getwd()
data$date <- as.Date(data$date)
str(data)
library(dplyr)
data %>% group_by(date) %>% summarize(total=sum(steps)) %>% summarize(average = mean(total, na.rm = TRUE))
data %>% group_by(date) %>% summarize(total=sum(steps)) %>% summarize(average = mean(total, na.rm = TRUE))
length(unique(data$date))
library(dplyr)
dailyActivity <- data %>% group_by(date) %>% summarize(total=sum(steps))
library(dplyr)
dailyActivity <- data %>% group_by(date) %>% summarize(total=sum(steps))
head(dailyActivity)
library(dplyr)
dailyActivity <- data %>% group_by(date) %>% summarize(dailySteps=sum(steps))
head(dailyActivity)
library(dplyr)
dailyActivity <- data %>% group_by(date) %>% summarize(dailySteps=sum(steps))
mean(dailyActivity$dailySteps)
library(dplyr)
dailyActivity <- data %>% group_by(date) %>% summarize(dailySteps=sum(steps))
mean(dailyActivity$dailySteps, na.rm = TRUE)
library(dplyr)
dailyActivity <- data %>% group_by(date) %>% summarize(dailySteps=sum(steps))
median(dailyActivity$dailySteps, na.rm = TRUE)
library(dplyr)
dailySteps <- data %>% group_by(date) %>% summarize(dailySteps=sum(steps))
# mean daily steps
meanDailySteps <- mean(dailySteps$dailySteps, na.rm = TRUE)
meanDailySteps
# mean daily steps
medianDailySteps <- median(dailySteps$dailySteps, na.rm = TRUE)
medianDailySteps
library(dplyr)
dailySteps <- data %>% group_by(date) %>% summarize(dailySteps=sum(steps))
# mean daily steps
meanDailySteps <- mean(dailySteps$dailySteps, na.rm = TRUE)
meanDailySteps
# mean daily steps
medianDailySteps <- median(dailySteps$dailySteps, na.rm = TRUE)
medianDailySteps
summary(dailySteps$dailySteps)
plot(x=date, y = dailySteps, data = dailySteps)
hist(dailySteps$dailySteps)
hist(dailySteps$dailySteps, bins = 10)
hist(dailySteps$dailySteps, brackets=10)
hist(dailySteps$dailySteps, buckets=10)
library(ggplot2)
plot(dailyActivity, aes(x = date, y = dailySteps) ) + geom_line()
data <- read.csv("activity.csv")
getwd()
data$date <- as.Date(data$date)
str(data)
library(dplyr)
dailySteps <- data %>% group_by(date) %>% summarize(dailySteps=sum(steps))
# mean daily steps
meanDailySteps <- mean(dailySteps$dailySteps, na.rm = TRUE)
meanDailySteps
# mean daily steps
medianDailySteps <- median(dailySteps$dailySteps, na.rm = TRUE)
medianDailySteps
summary(dailySteps$dailySteps)
hist(dailySteps$dailySteps, buckets=10)
library(ggplot2)
plot(dailyActivity, aes(x = date, y = dailySteps) ) + geom_line()
hist(dailySteps$dailySteps)
with(dailyActivity, plot(date, dailySteps, type = "l")
with(dailySteps, plot(date, dailySteps, type = "l")
with(dailySteps, plot(date, dailySteps)
with(dailySteps, plot(date, dailySteps))
with(dailySteps, plot(date, dailySteps, type="l"))
library(ggplot2)
ggplot(dailySteps, aes(x = date, y = dailySteps)) + geom_line()
data <- read.csv("activity.csv")
getwd()
data$date <- as.Date(data$date)
head(data, n = 20)
head(data)
max(data$interval)
tail(data)
head(data)
head(data, n = 10)
head(data, n = 50)
data[300:320,]
data[400:420,]
dim(data[data$date == "2012-10-01",])
dim(data)
dim(data[data$date == "2012-10-02",])
dim(data[data$date == "2012-10-03",])
data[1000:1050,]
str(data)
data %>% group_by(date) %>% summarize(m = mean(steps))
data %>% group_by(date) %>% summarize(m = mean(steps)) %>% summarize(sum(is.na(m)))
data %>% group_by(date) %>% mutate(totaln = sum(is.na(steps))) %>% head()
data %>% group_by(date) %>% summarize(totaln = sum(is.na(steps))) %>% head()
data %>% group_by(date) %>% summarize(totaln = sum(is.na(steps))) %>% summarize(sum(totaln))
data %>% group_by(date) %>% summarize(totaln = sum(is.na(steps))) %>% head(10)
data %>% group_by(date) %>% summarize(totaln = sum(is.na(steps))) %>% head(20)
data %>% group_by(date) %>% summarize(totaln = sum(is.na(steps))) %>% head(30)
data %>% group_by(date) %>% summarize(totaln = sum(is.na(steps))) %>% head(10:30)
data %>% group_by(date) %>% summarize(totaln = sum(is.na(steps))) %>% tail(10)
head(data)
data %>% group_by(interval) %>% summarize(meanActivity = mean(steps, na.rm = TRUE)) %>% head()
data %>% group_by(interval) %>% summarize(meanActivity = mean(steps, na.rm = TRUE)) %>% ggplot(aes(interval, meanActivity)) + geom_line()
data %>% group_by(interval) %>% summarize(meanActivity = mean(steps, na.rm = TRUE)) %>% ggplot(aes(interval, meanActivity)) + geom_line()
data %>% group_by(interval) %>% summarize(meanActivity = mean(steps, na.rm = TRUE)) %>% ggplot(aes(interval, meanActivity)) + geom_line()
ggplot(dailySteps, aes(dailySteps) ) + geom_hist()
library(ggplot2)
ggplot(dailySteps, aes(dailySteps) ) + geom_hist()
data <- read.csv("activity.csv")
getwd()
data$date <- as.Date(data$date)
head(data, n = 20)
library(dplyr)
dailySteps <- data %>% group_by(date) %>% summarize(dailySteps=sum(steps))
# mean daily steps
meanDailySteps <- mean(dailySteps$dailySteps, na.rm = TRUE)
meanDailySteps
# mean daily steps
medianDailySteps <- median(dailySteps$dailySteps, na.rm = TRUE)
medianDailySteps
summary(dailySteps$dailySteps)
library(ggplot2)
ggplot(dailySteps, aes(dailySteps) ) + geom_hist()
library(ggplot2)
ggplot(dailySteps, aes(dailySteps) ) + geom_histogram()
library(ggplot2)
ggplot(dailySteps, aes(dailySteps) ) + geom_histogram(binwidth = 10)
library(ggplot2)
ggplot(dailySteps, aes(dailySteps) ) + geom_histogram()
library(ggplot2)
ggplot(dailySteps, aes(dailySteps) ) + geom_histogram(bins = 10)
library(ggplot2)
ggplot(dailySteps, aes(dailySteps) ) + geom_histogram(bins = 20)
library(ggplot2)
ggplot(dailySteps, aes(dailySteps) ) + geom_histogram(bins = 10)
hist(dailySteps$dailySteps)
hist(dailySteps$dailySteps, breaks = 10)
